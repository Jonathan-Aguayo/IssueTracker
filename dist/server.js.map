{"version":3,"sources":["../server/server.js"],"names":["require","config","MongoClient","port","process","env","PORT","console","log","db","SourceMapSupport","install","client","useNewUrlParser","useUnifiedTopology","connect","then","connection","app","listen","catch","error","use","express","static","bodyParser","json","urlencoded","extended","name","keys","passport","initialize","session","get","req","res","collection","findOne","mongoDB","ObjectID","params","issueID","record","issue","send","filter","query","status","effortFrom","effortTo","effort","$gte","parseInt","$lte","user","id","find","toArray","metadata","total_count","issues","length","_metadata","records","message","post","newIssue","body","created","Date","Issue","validateIssue","insertOne","err","delete","deleteOne","put","_id","update","convertIssue","limit","next","updatedIssue","authenticate","scope","logout","redirect","successRedirect","failureRedirect","sendFile","path","resolve"],"mappings":"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","file":"server.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport Issue from './issues.js';\nimport mongoDB, { ObjectID } from 'mongodb';\nimport SourceMapSupport from 'source-map-support';\nimport passport from 'passport';\nimport cookieSession from 'cookie-session'\nimport path from 'path';\nimport 'babel-polyfill';\nrequire('dotenv').config();\nrequire('../passport-setup')\nconst MongoClient = require('mongodb').MongoClient;\nlet port = process.env.PORT || 3000;\nconsole.log(process.env.PORT);\nlet db;\nSourceMapSupport.install();\n//INITIALIZE DB\nconst client = MongoClient('mongodb+srv://JonathanA:Aguayo1@cluster0.id5hf.mongodb.net/test',{ useNewUrlParser: true, useUnifiedTopology: true });\nclient.connect().then(connection => {\ndb = connection;\napp.listen(port, () => {\nconsole.log(`app started on port ${port}`)\nconsole.log('Database connected successfully');\n});\n}).catch(error => {\nconsole.log('ERROR when connecting:', error);\n});\n\nconst app = express();\n//MIDDLEWARE\n\napp.use(express.static('static'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended:false}));\napp.use(cookieSession({\n    name:'Roomies-sesion',\n    keys:['key1','key2']\n}));\napp.use(passport.initialize());\napp.use(passport.session());\n\n\n//ROUTES\napp.get('/api/v1/issues/:issueID', (req,res) =>\n{\n    db.db('test').collection('issues').findOne({\"_id\": mongoDB.ObjectID(req.params.issueID)}).then(issue =>\n        {\n            res.json({record: issue});\n        })\n        .catch(err=>\n            {\n            res.json(400).send('Issue ID is not valid')\n            });   \n});\n\napp.get('/api/v1/issues', (req,res) =>\n{\n    const filter = {};\n    if(req.query.status) filter.status = req.query.status;\n    if (req.query.effortFrom || req.query.effortTo) filter.effort = {};\n    if (req.query.effortFrom) filter.effort.$gte = parseInt(req.query.effortFrom, 10);\n    if (req.query.effortTo) filter.effort.$lte = parseInt(req.query.effortTo, 10);\n    if(req.session.passport)\n    {\n        filter.user = req.session.passport.user.id;\n    }\n    else\n    {\n        filter.user = '0000000000'\n    }\n\n    db.db('test').collection('issues').find(filter).toArray().then(issues => \n        {\n            const metadata = { total_count: issues.length };\n            res.json({_metadata: metadata, records: issues});\n        }).catch(error => {console.log(error); res.status(500).json({message: `Internal server error: ${error}`}); });\n});\napp.post('/api/v1/issues', (req,res) => \n{\n    const newIssue = req.body;\n    newIssue.created = new Date();\n    if(req.session.passport)\n    {\n        newIssue.user = req.session.passport.user.id\n    }\n    else\n    {\n        newIssue.user = '0000000000'\n    }\n    if (!newIssue.status)\n    {\n        newIssue.status = 'New';\n    }   \n    let error = Issue.validateIssue(newIssue);\n    if(error)\n    {\n        res.status(400).json({error});\n        return;\n    }\n\n    db.db('test').collection('issues').insertOne(newIssue, (err,db) => {\n        if(err)\n            res.json(400).send(err)\n        else\n            res.json(newIssue);\n    });\n\n});\napp.delete('/api/v1/issues/:issueID', (req,res) =>\n{\n    db.db('test').collection('issues').findOne({\"_id\": mongoDB.ObjectID(req.params.issueID)}).then( () =>\n        {\n            db.db('test').collection('issues').deleteOne({'_id':mongoDB.ObjectID(req.params.issueID)}).then( () => \n            {\n                res.send(200)\n            })\n        })\n        .catch(err=>\n            {\n            res.json(400).send('Issue ID is not valid')\n            });   \n});\napp.put('/api/v1/issues/:issueID', (req,res) =>\n{\n    let issueID;\n    try \n    {\n        issueID = new ObjectID(req.params.issueID);\n    } \n    catch (error)\n    {\n        res.status(422).json({ message: `Invalid issue ID format: ${error}` })\n        return;\n    }\n\n    const issue = req.body;\n    delete issue._id;\n\n    const error = Issue.validateIssue(issue);\n    if(error)\n    {\n        res.status(400).json({ message: `Invalid request ${error}` });\n        return;\n    }\n\n    db.db('test').collection('issues').update({_id: issueID}, Issue.convertIssue(issue)).then( () => \n    {\n        db.db('test').collection('issues').find( {_id: issueID }).limit(1).next().then( (updatedIssue) =>{ res.json(updatedIssue) })\n        .catch( error => res.status(500).json({message: `Internal server Error: ${error}`}));\n    });\n});\napp.get('/auth/google', passport.authenticate('google', { scope:[ 'profile','email'] }\n));\napp.get('/api/v1/logout', (req,res) =>\n{\n    req.session = null;\n    req.logout();\n    res.redirect('/');\n});\napp.get('/auth/google/failure',(req,res) => {res.send('Failed to log in')});\napp.get( '/auth/google/callback',passport.authenticate( 'google', {\n        successRedirect: '/',\n        failureRedirect: '/auth/google/failure'\n}));\napp.get('/homepage', (req,res) => \n{\n    res.sendFile(path.resolve('static/homepage.html'))\n});\napp.get('*', (req,res) =>\n{\n    res.sendFile(path.resolve('static/index.html'));\n});\n\n"]}