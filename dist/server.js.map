{"version":3,"sources":["../server/server.js"],"names":["MongoClient","require","db","SourceMapSupport","install","client","useNewUrlParser","useUnifiedTopology","connect","then","connection","app","listen","console","log","catch","error","use","express","static","bodyParser","json","urlencoded","extended","name","keys","passport","initialize","session","get","req","res","collection","findOne","mongoDB","ObjectID","params","issueID","issue","record","send","find","toArray","metadata","total_count","issues","length","_metadata","records","status","message","post","newIssue","body","created","Date","Issue","validateIssue","insertOne","err","delete","deleteOne","authenticate","scope","logout","redirect","user","JSON","stringify","successRedirect","failureRedirect"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AADA,IAAMA,cAAcC,QAAQ,SAAR,EAAmBD,WAAvC;;AAEAC,QAAQ,mBAAR;AACA,IAAIC,WAAJ;AACAC,2BAAiBC,OAAjB;AACA;AACA,IAAMC,SAASL,YAAY,iEAAZ,EAA8E,EAAEM,iBAAiB,IAAnB,EAAyBC,oBAAoB,IAA7C,EAA9E,CAAf;AACAF,OAAOG,OAAP,GAAiBC,IAAjB,CAAsB,sBAAc;AACpCP,SAAKQ,UAAL;AACAC,QAAIC,MAAJ,CAAW,IAAX,EAAiB,YAAM;AACvBC,gBAAQC,GAAR,CAAY,0BAAZ;AACAD,gBAAQC,GAAR,CAAY,iCAAZ;AACC,KAHD;AAIC,CAND,EAMGC,KANH,CAMS,iBAAS;AAClBF,YAAQC,GAAR,CAAY,wBAAZ,EAAsCE,KAAtC;AACC,CARD;;AAaA,IAAML,MAAM,wBAAZ;AACA;AACAA,IAAIM,GAAJ,CAAQC,kBAAQC,MAAR,CAAe,QAAf,CAAR;AACAR,IAAIM,GAAJ,CAAQG,qBAAWC,IAAX,EAAR;AACAV,IAAIM,GAAJ,CAAQG,qBAAWE,UAAX,CAAsB,EAACC,UAAS,KAAV,EAAtB,CAAR;AACAZ,IAAIM,GAAJ,CAAQ,6BAAc;AAClBO,UAAK,gBADa;AAElBC,UAAK,CAAC,MAAD,EAAQ,MAAR;AAFa,CAAd,CAAR;AAIAd,IAAIM,GAAJ,CAAQS,mBAASC,UAAT,EAAR;AACAhB,IAAIM,GAAJ,CAAQS,mBAASE,OAAT,EAAR;;AAGA;AACAjB,IAAIkB,GAAJ,CAAQ,yBAAR,EAAmC,UAACC,GAAD,EAAKC,GAAL,EACnC;AACI7B,OAAGA,EAAH,CAAM,MAAN,EAAc8B,UAAd,CAAyB,QAAzB,EAAmCC,OAAnC,CAA2C,EAAC,OAAOC,kBAAQC,QAAR,CAAiBL,IAAIM,MAAJ,CAAWC,OAA5B,CAAR,EAA3C,EAA0F5B,IAA1F,CAA+F,iBAC3F;AACII,gBAAQC,GAAR,CAAY,WAASwB,KAArB;AACAP,YAAIV,IAAJ,CAAS,EAACkB,QAAQD,KAAT,EAAT;AACH,KAJL,EAKKvB,KALL,CAKW,eACH;AACAgB,YAAIV,IAAJ,CAAS,GAAT,EAAcmB,IAAd,CAAmB,uBAAnB;AACC,KART;AASH,CAXD;;AAaA7B,IAAIkB,GAAJ,CAAQ,gBAAR,EAA0B,UAACC,GAAD,EAAKC,GAAL,EAC1B;AACI7B,OAAGA,EAAH,CAAM,MAAN,EAAc8B,UAAd,CAAyB,QAAzB,EAAmCS,IAAnC,GAA0CC,OAA1C,GAAoDjC,IAApD,CAAyD,kBACrD;AACI,YAAMkC,WAAW,EAAEC,aAAaC,OAAOC,MAAtB,EAAjB;AACAf,YAAIV,IAAJ,CAAS,EAAC0B,WAAWJ,QAAZ,EAAsBK,SAASH,MAA/B,EAAT;AACH,KAJL,EAIO9B,KAJP,CAIa,iBAAS;AAACF,gBAAQC,GAAR,CAAYE,KAAZ,EAAoBe,IAAIkB,MAAJ,CAAW,GAAX,EAAgB5B,IAAhB,CAAqB,EAAC6B,qCAAmClC,KAApC,EAArB;AAAqE,KAJhH;AAKH,CAPD;;AASAL,IAAIwC,IAAJ,CAAS,gBAAT,EAA2B,UAACrB,GAAD,EAAKC,GAAL,EAC3B;AACI,QAAMqB,WAAWtB,IAAIuB,IAArB;AACAD,aAASE,OAAT,GAAmB,IAAIC,IAAJ,EAAnB;AACA,QAAI,CAACH,SAASH,MAAd,EACA;AACIG,iBAASH,MAAT,GAAkB,KAAlB;AACH;AACD,QAAIjC,QAAQwC,iBAAMC,aAAN,CAAoBL,QAApB,CAAZ;AACA,QAAGpC,MAAMkC,OAAT,EACA;AACI;AACH;;AAEDhD,OAAGA,EAAH,CAAM,MAAN,EAAc8B,UAAd,CAAyB,QAAzB,EAAmC0B,SAAnC,CAA6CN,QAA7C,EAAuD,UAACO,GAAD,EAAKzD,EAAL,EAAY;AAC/D,YAAGyD,GAAH,EACI5B,IAAIV,IAAJ,CAAS,GAAT,EAAcmB,IAAd,CAAmBmB,GAAnB,EADJ,KAGI5B,IAAIV,IAAJ,CAAS+B,QAAT;AACP,KALD;AAOH,CArBD;;AAuBAzC,IAAIiD,MAAJ,CAAW,yBAAX,EAAsC,UAAC9B,GAAD,EAAKC,GAAL,EACtC;AACI7B,OAAGA,EAAH,CAAM,MAAN,EAAc8B,UAAd,CAAyB,QAAzB,EAAmCC,OAAnC,CAA2C,EAAC,OAAOC,kBAAQC,QAAR,CAAiBL,IAAIM,MAAJ,CAAWC,OAA5B,CAAR,EAA3C,EAA0F5B,IAA1F,CAAgG,YAC5F;AACIP,WAAGA,EAAH,CAAM,MAAN,EAAc8B,UAAd,CAAyB,QAAzB,EAAmC6B,SAAnC,CAA6C,EAAC,OAAM3B,kBAAQC,QAAR,CAAiBL,IAAIM,MAAJ,CAAWC,OAA5B,CAAP,EAA7C,EAA2F5B,IAA3F,CAAiG,YACjG;AACIsB,gBAAIS,IAAJ,CAAS,GAAT;AACH,SAHD;AAIH,KANL,EAOKzB,KAPL,CAOW,eACH;AACAgB,YAAIV,IAAJ,CAAS,GAAT,EAAcmB,IAAd,CAAmB,uBAAnB;AACC,KAVT;AAWH,CAbD;;AAgBA7B,IAAIkB,GAAJ,CAAQ,cAAR,EAAwBH,mBAASoC,YAAT,CAAsB,QAAtB,EAAgC,EAAEC,OAAM,CAAE,SAAF,EAAY,OAAZ,CAAR,EAAhC,CAAxB;;AAGApD,IAAIkB,GAAJ,CAAQ,SAAR,EAAmB,UAACC,GAAD,EAAKC,GAAL,EACnB;AACID,QAAIF,OAAJ,GAAY,IAAZ;AACAE,QAAIkC,MAAJ;AACAjC,QAAIkC,QAAJ,CAAa,GAAb;AACH,CALD;;AAOAtD,IAAIkB,GAAJ,CAAQ,sBAAR,EAA+B,UAACC,GAAD,EAAKC,GAAL,EAAa;AAACA,QAAIS,IAAJ,CAAS,kBAAT;AAA6B,CAA1E;AACA7B,IAAIkB,GAAJ,CAAQ,sBAAR,EAA+B,UAACC,GAAD,EAAKC,GAAL,EAC/B;AACIlB,YAAQC,GAAR,CAAYgB,IAAIoC,IAAhB;AACAnC,QAAIS,IAAJ,oBAA0B2B,KAAKC,SAAL,CAAetC,IAAIoC,IAAnB,CAA1B;AACH,CAJD;AAKAvD,IAAIkB,GAAJ,CAAS,uBAAT,EAAiCH,mBAASoC,YAAT,CAAuB,QAAvB,EAAiC;AAC1DO,qBAAiB,sBADyC;AAE1DC,qBAAiB;;AAFyC,CAAjC,CAAjC","file":"server.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport Issue from './issues.js';\nimport 'babel-polyfill';\nimport SourceMapSupport from 'source-map-support';\nimport passport from 'passport';\nimport cookieSession from 'cookie-session'\nconst MongoClient = require('mongodb').MongoClient;\nimport mongoDB from 'mongodb';\nrequire('../passport-setup')\nlet db;\nSourceMapSupport.install();\n//INITIALIZE DB\nconst client = MongoClient('mongodb+srv://JonathanA:Aguayo1@cluster0.id5hf.mongodb.net/test',{ useNewUrlParser: true, useUnifiedTopology: true });\nclient.connect().then(connection => {\ndb = connection;\napp.listen(3000, () => {\nconsole.log('app started on port 8000')\nconsole.log('Database connected successfully');\n});\n}).catch(error => {\nconsole.log('ERROR when connecting:', error);\n});\n\n\n\n\nconst app = express();\n//MIDDLEWARE\napp.use(express.static('static'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended:false}));\napp.use(cookieSession({\n    name:'Roomies-sesion',\n    keys:['key1','key2']\n}));\napp.use(passport.initialize());\napp.use(passport.session());\n\n\n//ROUTES\napp.get('/api/v1/issues/:issueID', (req,res) =>\n{\n    db.db('test').collection('issues').findOne({\"_id\": mongoDB.ObjectID(req.params.issueID)}).then(issue =>\n        {\n            console.log('Issue:'+issue);\n            res.json({record: issue});\n        })\n        .catch(err=>\n            {\n            res.json(400).send('Issue ID is not valid')\n            });   \n});\n\napp.get('/api/v1/issues', (req,res) =>\n{\n    db.db('test').collection('issues').find().toArray().then(issues => \n        {\n            const metadata = { total_count: issues.length };\n            res.json({_metadata: metadata, records: issues});\n        }).catch(error => {console.log(error); res.status(500).json({message: `Internal server error: ${error}`}); });\n});\n\napp.post('/api/v1/issues', (req,res) => \n{\n    const newIssue = req.body;\n    newIssue.created = new Date();\n    if (!newIssue.status)\n    {\n        newIssue.status = 'New';\n    }   \n    let error = Issue.validateIssue(newIssue);\n    if(error.message)\n    {\n        //res.json(400).send(error.message);\n    }\n\n    db.db('test').collection('issues').insertOne(newIssue, (err,db) => {\n        if(err)\n            res.json(400).send(err)\n        else\n            res.json(newIssue);\n    });\n\n});\n\napp.delete('/api/v1/issues/:issueID', (req,res) =>\n{\n    db.db('test').collection('issues').findOne({\"_id\": mongoDB.ObjectID(req.params.issueID)}).then( () =>\n        {\n            db.db('test').collection('issues').deleteOne({'_id':mongoDB.ObjectID(req.params.issueID)}).then( () => \n            {\n                res.send(200)\n            })\n        })\n        .catch(err=>\n            {\n            res.json(400).send('Issue ID is not valid')\n            });   \n});\n\n\napp.get('/auth/google', passport.authenticate('google', { scope:[ 'profile','email'] }\n));\n\napp.get('/logout', (req,res) =>\n{\n    req.session=null;\n    req.logout();\n    res.redirect('/');\n});\n\napp.get('/auth/google/failure',(req,res) => {res.send('Failed to log in')});\napp.get('/auth/google/success',(req,res) => \n{\n    console.log(req.user)\n    res.send(`Welcome home, ${JSON.stringify(req.user)}!`);\n});\napp.get( '/auth/google/callback',passport.authenticate( 'google', {\n        successRedirect: '/auth/google/success',\n        failureRedirect: '/auth/google/failure'\n        \n}));\n"]}